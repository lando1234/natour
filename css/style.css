@charset "UTF-8";
*,
*::after,
*::before {
  margin: 0px;
  padding: 0px;
  box-sizing: inherit; }

html {
  /* es el equivalente en el default del browser de 10px ( el default es 16 ) 
        para que sea todo responsive en cuanto a los tama√±os con rem
    */
  font-size: 62.5%; }

body {
  font-family: "Lato";
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 30px;
  box-sizing: border-box; }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem; }

.header__logo {
  height: 3.5rem; }

.header__text-box {
  /* centrar un elemento con un padre no static */
  position: absolute;
  top: 40%;
  /* Deberia ser 50 pero para acomodar al clip pusimos en 40*/
  left: 50%;
  text-align: center;
  /* con esto muevo el eje del elemento, en este caso de la ezquina superior izquierda
       al medio
    */
  transform: translate(-50%, -50%); }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
  /* fix a un bug con las animations */
  backface-visibility: hidden; }

/* los block son para que se pongan uno arriba del otro*/
.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  /* Unicas dos propiedades para usar los keyframes que especificamos abajo */
  animation-name: move-in-left;
  animation-duration: 1s;
  /* propiedades adicionales */
  /*
    animation-delay: 3s;  atrasa la animation 
    animation-iteration-count: 3; repite la animation
    */
  animation-timing-function: ease-out;
  /*distintas formas de funcionar de la animation*/ }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.27rem;
  animation: move-in-right 1s ease-out; }

/* animations */
/* puede ir cualquier cantidad de porcentajes */
/* conviene en general solo animar opacity y transform por optimizacion de browsers*/
@keyframes move-in-left {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes move-in-right {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 100px;
  transition: all .2s;
  position: relative; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn::after {
  content: '';
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--white::after {
  background-color: #fff;
  color: #777; }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: move-in-bottom .5s ease-out .75s;
  animation-fill-mode: backwards; }

@keyframes move-in-bottom {
  0% {
    opacity: 0;
    transform: translatey(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }
